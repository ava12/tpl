типы:
  пустое значение: { } ((. .))
  число
  строка: "" '' %% ``
  список: [: значение , ... :] [: . имя : значение , ... :] [: . {выражение} : значение , ... :]
  список: (:: значение , ... ::) (:: . имя : значение , ... ::) (:: . {выражение} : значение , ... ::)
  функция: function (параметр , ...) { тело }

синтаксис:

объект:
  имя
  имя . имя
  имя . { выражение }
  имя [ ключ/индекс , ... ]
  имя (: ключ/индекс , ... :)

ссылка:
  @ выражение

разыменование:
  $ выражение

присваивание:
  объект : выражение
  объект : ссылка

конкатенация:
  объект :: выражение
  объект :: ссылка

вызов функции:
  объект (параметр , ...)
  объект ( . имя : параметр , ...)

ветвление:
  if выражение then выражение [else выражение]

циклы:
  for объект : первое_значение to последнее_значение (step шаг)? do выражение
  foreach ( объект , значение? (, ключ? (, индекс)? )? ) do выражение
  do выражение

управление циклом:
  break
  continue
  while выражение
  until выражение

выбор:
  case выражение {
    when шаблон then выражение
    when (шаблон , ...) then выражение
  }
  else выражение

логические выражения:
  and (выражение , ...)
  or (выражение , ...)

определение переменных:
  var имя
  var имя : значение
  var (имя , ...)
  var (имя : значение , ...)
  define имя : значение

метапрограмма:
  \{ код }\


стандартные функции:

логические:
  not(a)

строки:
  chr(code, ...)
  ord(s)
  trim(s)
  strlen(s)
  substr(s, start, length?)
  strtr(s, from, to)
  strsplice(@s, start, length, replace?)

числа:
  +(a, ...)
  -(a), -(a, b)
  *(a, ...)
  /(a), /(a, b)
  //(a, b)
  ///(a, b)
  **(a, b)
  sum(l)
  pro(l)
  int(a)
  frac(a)
  ceil(a)
  round(a)
  ~(a)
  |(a, ...)
  &(a, ...)
  ^(a, ...)
  <<(a, length?)
  >>(a, length?)

списки:
  count(l)
  slice(l, start, length?)
  splice(l, start, length?, replace?)
  key(l, index)
  index(l, key)
  keys(l)
  delete(l, key|index)
  sort(l, func?)

типы:
  bool(a)
  string(a)
  list(a)
  isset(a)
  typeof(a) // "null"|"bool"|"number"|"string"|"list"|"function"
  const(a)

сравнения:
  ==(a, b)
  <>(a, b)
  <(a, b)
  <=(a, b)
  >(a, b)
  >=(a,b)
