; пример корректного INI файла
; указаны значения параметров по умолчанию
; если не указано другое, то аргументы из командной строки
; имеют приоритет над INI параметрами

; кодировка текста, выводимого на консоль
; если параметр не задан, используется переменная окружения OS_CON_ENC
; по умолчанию CP866 для Windows и UTF-8 для остальных ОС
consoleEnc =

; тип окончаний строк для результатов: CR, LF или CRLF
; любое другое значение: использовать системные окончания строк
eol =

; имя или маска имен скриптов
; используется совместно с именами/масками, заданными в командной строке
inputMask =

; каталог для записи итоговых файлов
outputDir = %INPUT_DIR%

; расширение (с точкой) итоговых файлов
; итоговые файлы имеют имена вида %outputDir%/%INPUT_NAME%%outputSuffix%
outputSuffix =

; 0 - выводить результаты в файлы, отдельный файл для каждого скрипта
; 1 - выводить результаты на консоль
stdout = 0

; 1 - режим тестирования: подключается библиотека тестирования,
; результаты работы скриптов не выводятся, на консоли отображается прогресс
testMode = 0

; 0 - выполнить скрипты, указанные в командной строке; если не указаны - выполнить inputMask
; 1 - подставить каждую маску из командной строки в маску inputMask вместо первой *;
; если не указаны - выполнить inputMask
; пример:
; useMask = 1
; inputMask = dir/*.tpl
; foo bar -> dir/foo.tpl dir/bar.tpl
useMask = 0

; именованные аргументы, передаваемые в главную функцию каждого скрипта
[arg]

; например:
;format = HTML

; список переменных, значения которых можно подставлять
; в другие параметры, используя нотацию %имя_переменной%
; пустое имя переменной дает символ %
; значения переменных заново подставляются перед выполнением каждого скрипта,
; после обновления автоматически сгенерированных переменных
; в качестве примера перечислены переменные, генерирующиеся автоматически
[env]

; каталог используемого INI файла
INI_DIR =
; каталог исходного TPL скрипта, устанавливается для каждого скрипта
INPUT_DIR =
; имя исходного TPL скрипта, без пути и последнего расширения
INPUT_NAME =
; рабочий каталог при запуске программы
PWD = .

; настройки стандартной библиотеки file
[file]

; кодировка имен в файловой системе
; если параметр не задан, используется переменная окружения OS_FS_ENC
; по умолчанию Windows-1251 для Windows и UTF-8 для остальных ОС
nameEncoding =

; дополнительные символы и диапазоны (например, А-Я),
; допустимые в именах файлов и каталогов
; основные символы: A-Za-z0-9_. !"#$%&'()+,<=>@^_`|~-
nameChars =

; список корневых каталогов в виде roots[] = "имя;путь/к/каталогу;права_доступа"
; права доступа состоят из символов:
;   a  добавление содержимого к концу файла
;   c  создание новых файлов и каталогов
;   d  удаление существующих файлов и каталогов
;   i  подключение файлов метафункциями include и require
;   n  переименование файлов и каталогов
;   r  чтение существующих файлов
;   w  запись существующих файлов
;   *  все права, кроме i
; например:
;roots[] = "lib;/real/path/to/lib;ir"
;roots[] = "temp;/var/tmp;*"

; настройки используемых библиотек
[lib]

; список используемых стандартных библиотек
lib = "std;regexp;meta;file"

